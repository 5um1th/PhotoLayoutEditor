/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(1);\nvar ReactDOM = __webpack_require__(2);\n\n// init components\nvar Header = __webpack_require__(3);\nvar Container = __webpack_require__(4);\nvar Sidebar = __webpack_require__(10);\nvar Cropper = __webpack_require__(14);\n\n// App\nvar App = React.createClass({\n\n\tdisplayName: 'photo-layout-editor',\n\tsaveWidth: 0,\n\t$editor: null,\n\t$sidebar: null,\n\tshow_sidebar: localStorage.getItem('sidebar') != 'false',\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {};\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tvar _this = this;\n\n\t\tthis.$editor = $(ReactDOM.findDOMNode(this.refs.editor));\n\t\tthis.$sidebar = $(ReactDOM.findDOMNode(this.refs.sidebar));\n\n\t\t// scroll event\n\t\t$(window).on('scroll', function (e) {\n\t\t\t_this.refs.container.refs.navTop.scrollEvent();\n\t\t});\n\n\t\t// show sidebar\n\t\tif (this.show_sidebar) {\n\t\t\tthis.$editor.addClass('on-sidebar');\n\t\t}\n\n\t\t// play gridster\n\t\tthis.refs.container.actGridster();\n\t},\n\n\n\t/**\r\n  * Toggle side bar\r\n  */\n\ttoggleSidebar: function toggleSidebar() {\n\t\tvar bool = !this.show_sidebar;\n\t\tlocalStorage.setItem('sidebar', bool);\n\t\tthis.show_sidebar = bool;\n\n\t\tthis.saveWidth = bool ? this.saveWidth + this.$sidebar.width() : this.saveWidth - this.$sidebar.width();\n\n\t\tthis.$editor.toggleClass('on-sidebar');\n\t\tthis.$editor.css('min-width', this.saveWidth);\n\t},\n\n\n\t/**\r\n  * Resize container width\r\n  *\r\n  * @param {int} width\r\n  */\n\tresizeWidth: function resizeWidth(width) {\n\t\tthis.saveWidth = this.show_sidebar ? width : width - this.$sidebar.width();\n\t\tthis.$editor.css('min-width', this.saveWidth);\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ ref: 'editor', className: 'ple-editor' },\n\t\t\tReact.createElement(Header, { ref: 'header' }),\n\t\t\tReact.createElement(Container, {\n\t\t\t\tref: 'container',\n\t\t\t\tresizeWidth: this.resizeWidth }),\n\t\t\tReact.createElement(Sidebar, {\n\t\t\t\tref: 'sidebar',\n\t\t\t\tuploadScript: preference.uploadScript,\n\t\t\t\tremoveScript: preference.removeScript,\n\t\t\t\tdefaultImagesScript: preference.defaultImagesScript,\n\t\t\t\tshow: this.state.show_sidebar,\n\t\t\t\ttoggleSidebar: this.toggleSidebar })\n\t\t);\n\t}\n});\n\n// render App\nwindow.app = ReactDOM.render(React.createElement(App, null), document.getElementById('app'));\nwindow.cropper = ReactDOM.render(React.createElement(Cropper, null), document.getElementById('cropper'));\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/App.jsx\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/App.jsx?");

/***/ },
/* 1 */
/***/ function(module, exports) {

	eval("module.exports = React;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22React%22?");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("module.exports = ReactDOM;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ReactDOM\"\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22ReactDOM%22?");

/***/ },
/* 3 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'Header',\n\n\tcomponentDidMount: function componentDidMount() {},\n\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t\"header\",\n\t\t\t{ className: \"ple-header\" },\n\t\t\tReact.createElement(\n\t\t\t\t\"h1\",\n\t\t\t\tnull,\n\t\t\t\t\"Photo Layout Editor\"\n\t\t\t),\n\t\t\tReact.createElement(\n\t\t\t\t\"p\",\n\t\t\t\tnull,\n\t\t\t\t\"사진 레이아웃 에디터입니다. 처음 시작하면 먼저 문서설정을 해주세요!\"\n\t\t\t)\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/header/Header.jsx\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/header/Header.jsx?");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar NavTop = __webpack_require__(5);\nvar Gridster = __webpack_require__(7);\nvar NavBottom = __webpack_require__(9);\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'Container',\n\toriginalPreference: {},\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tpreference: {\n\t\t\t\twidth: 100,\n\t\t\t\theight: 100,\n\t\t\t\tmax_col: 5,\n\t\t\t\tmax_scale: 2,\n\t\t\t\touter_margin: 10,\n\t\t\t\tinner_margin: 10\n\t\t\t},\n\t\t\taction: null,\n\t\t\tdynamicParameter: {}\n\t\t};\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.originalPreference = this.state.preference;\n\t\tthis.gridster = this.refs.gridster;\n\t},\n\n\n\t/**\r\n  * Update preference\r\n  *\r\n  * @param {object} params\r\n  */\n\tupdatePreference: function updatePreference(params) {\n\t\tthis.setState({ preference: params, action: 'updatePreference' });\n\t\tthis.refs.navTop.closeSetting();\n\t},\n\n\n\t/**\r\n  * Reset preference\r\n  */\n\tresetPreference: function resetPreference() {\n\t\tthis.setState({ preference: this.originalPreference, action: null });\n\t},\n\n\n\t/**\r\n  * Play Gridster\r\n  */\n\tactGridster: function actGridster() {\n\t\tthis.setState({ action: 'init' });\n\t},\n\n\n\t/**\r\n  * Generate\r\n  */\n\tgenerate: function generate() {\n\t\tlog('generate output');\n\t},\n\n\n\t/**\r\n  * On select block\r\n  * \r\n  */\n\tonSelectBlock: function onSelectBlock($el) {\n\t\tthis.refs.navTop.onSelect($el);\n\t},\n\n\n\t/**\r\n  * Top navigation control\r\n  *\r\n  * @param {event} e\r\n  */\n\ttopNavControl: function topNavControl(e) {\n\t\tvar type = e.currentTarget.getAttribute('data-type');\n\n\t\tswitch (type) {\n\t\t\tcase 'shuffle':\n\t\t\t\tthis.refs.gridster.shuffleBlocks();\n\t\t\t\tbreak;\n\t\t\tcase 'addBlock':\n\t\t\t\tthis.refs.gridster.addBlock();\n\t\t\t\tbreak;\n\t\t\tcase 'edit':\n\t\t\t\tvar $selectedItem = this.refs.gridster.$gridster.find('li.selected');\n\t\t\t\tif ($selectedItem.length) {\n\t\t\t\t\tvar $figure = $selectedItem.children('figure');\n\t\t\t\t\twindow.cropper.open({\n\t\t\t\t\t\t$selected: $selectedItem,\n\t\t\t\t\t\timage: {\n\t\t\t\t\t\t\turl: $figure.attr('data-image'),\n\t\t\t\t\t\t\tsize: $figure.attr('data-size'),\n\t\t\t\t\t\t\tposition: $figure.attr('data-position')\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'empty':\n\t\t\t\tthis.refs.gridster.emptyBlock();\n\t\t\t\tbreak;\n\t\t\tcase 'duplicate':\n\t\t\t\tthis.refs.gridster.duplicateBlock();\n\t\t\t\tbreak;\n\t\t\tcase 'remove':\n\t\t\t\tthis.refs.gridster.removeBlock();\n\t\t\t\tbreak;\n\t\t}\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'ple-container' },\n\t\t\tReact.createElement(NavTop, {\n\t\t\t\tref: 'navTop',\n\t\t\t\tupdate: this.updatePreference,\n\t\t\t\treset: this.resetPreference,\n\t\t\t\tactControl: this.topNavControl,\n\t\t\t\tpreference: this.state.preference }),\n\t\t\tReact.createElement(Gridster, {\n\t\t\t\tref: 'gridster',\n\t\t\t\tpreference: this.state.preference,\n\t\t\t\taction: this.state.action,\n\t\t\t\tresizeWidth: this.props.resizeWidth,\n\t\t\t\tselectBlock: this.onSelectBlock,\n\t\t\t\tdynamicParameter: this.state.dynamicParameter }),\n\t\t\tReact.createElement(NavBottom, {\n\t\t\t\tgenerate: this.generate })\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/container/Container.jsx\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/container/Container.jsx?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\n// init components\nvar NavTopForm = __webpack_require__(6);\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'NavTop',\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tshow_form: false,\n\t\t\tfix: false,\n\t\t\tvisible: {\n\t\t\t\tsetting: true,\n\t\t\t\trandom: true,\n\t\t\t\tadd: true,\n\t\t\t\tedit: false,\n\t\t\t\tempty: false,\n\t\t\t\tduplicate: false,\n\t\t\t\tremove: false\n\t\t\t}\n\t\t};\n\t},\n\n\n\t/**\r\n  * Toggle setting form\r\n  */\n\ttoggleSetting: function toggleSetting() {\n\t\tvar self = this;\n\t\tif (!this.state.show_form == true) {\n\t\t\t$(document).on('click', function (e) {\n\t\t\t\tif (!$(e.target).closest('#settings').length) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t$(this).off('click');\n\t\t\t\t\tself.setState({ show_form: false });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.setState({ show_form: !this.state.show_form });\n\t},\n\n\n\t/**\r\n  * Close setting layer\r\n  */\n\tcloseSetting: function closeSetting() {\n\t\t$(document).off('click');\n\t\tthis.setState({ show_form: false });\n\t},\n\n\n\t/**\r\n  * Play scroll event\r\n  */\n\tscrollEvent: function scrollEvent() {\n\t\tvar windowTop = $(window).scrollTop();\n\t\tvar $el = $(ReactDOM.findDOMNode(this));\n\t\tif ($el.offset().top < windowTop) {\n\t\t\tthis.setState({ fix: true });\n\t\t} else {\n\t\t\tthis.setState({ fix: false });\n\t\t}\n\t},\n\n\n\t/**\r\n  * On select block\r\n  *\r\n  * @param {object} $el\r\n  */\n\tonSelect: function onSelect($el) {\n\t\tvar newVisible = this.state.visible;\n\t\tif ($el) {\n\t\t\tnewVisible.duplicate = true;\n\t\t\tnewVisible.remove = true;\n\t\t\tif ($el.length == 1 && $el.children('figure').length) {\n\t\t\t\tnewVisible.edit = true;\n\t\t\t\tnewVisible.empty = true;\n\t\t\t}\n\t\t} else {\n\t\t\tnewVisible.duplicate = false;\n\t\t\tnewVisible.remove = false;\n\t\t\tnewVisible.edit = false;\n\t\t\tnewVisible.empty = false;\n\t\t}\n\t\tthis.setState({ visible: newVisible });\n\t},\n\n\n\t/**\r\n  * RENDER\r\n  */\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'nav-top-wrap' },\n\t\t\tReact.createElement(\n\t\t\t\t'nav',\n\t\t\t\t{ className: 'nav-top' + (this.state.fix ? ' fix' : '') },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'block' + (this.state.visible.setting ? ' is-show' : '') + (this.state.show_form ? ' is-active' : '') },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', title: 'Edit preference', onClick: this.toggleSetting },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-setting abs' },\n\t\t\t\t\t\t\t'Setting'\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(NavTopForm, {\n\t\t\t\t\t\tupdate: this.props.update,\n\t\t\t\t\t\treset: this.props.reset,\n\t\t\t\t\t\tpreference: this.props.preference })\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'block' + (this.state.visible.random ? ' is-show' : '') },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', title: 'Shuffle block', onClick: this.props.actControl, 'data-type': 'shuffle' },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-arrow-random abs' },\n\t\t\t\t\t\t\t'Random block'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'block' + (this.state.visible.add ? ' is-show' : '') },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', title: 'Add block', onClick: this.props.actControl, 'data-type': 'addBlock' },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-plus abs' },\n\t\t\t\t\t\t\t'Add block'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'block for-item' + (this.state.visible.edit ? ' is-show' : '') },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', title: 'Edit block', onClick: this.props.actControl, 'data-type': 'edit' },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-pencel abs' },\n\t\t\t\t\t\t\t'Edit block'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'block for-item' + (this.state.visible.empty ? ' is-show' : '') },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', title: 'Remove image in block', onClick: this.props.actControl, 'data-type': 'empty' },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-empty abs' },\n\t\t\t\t\t\t\t'Remove image'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'block for-item' + (this.state.visible.duplicate ? ' is-show' : '') },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', title: 'Duplicate block', onClick: this.props.actControl, 'data-type': 'duplicate' },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-duplicate abs' },\n\t\t\t\t\t\t\t'Duplicate block'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ className: 'block for-item' + (this.state.visible.remove ? ' is-show' : '') },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', title: 'Remove block', onClick: this.props.actControl, 'data-type': 'remove' },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-trash abs' },\n\t\t\t\t\t\t\t'Remove block'\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/container/NavTop.jsx\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/container/NavTop.jsx?");

/***/ },
/* 6 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'NavTop-Form',\n\tform: null,\n\n\tpropTypes: {\n\t\tupdate: React.PropTypes.func\n\t},\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {};\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.form = ReactDOM.findDOMNode(this.refs.form);\n\t},\n\tupdate: function update(e) {\n\t\te.preventDefault();\n\t\tthis.props.update({\n\t\t\twidth: parseInt(this.form.width.value),\n\t\t\theight: parseInt(this.form.height.value),\n\t\t\tmax_col: parseInt(this.form.max_col.value),\n\t\t\tmax_scale: parseInt(this.form.max_scale.value),\n\t\t\touter_margin: parseInt(this.form.outer_margin.value),\n\t\t\tinner_margin: parseInt(this.form.inner_margin.value)\n\t\t});\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t\"article\",\n\t\t\t{ className: \"form\", id: \"settings\" },\n\t\t\tReact.createElement(\n\t\t\t\t\"form\",\n\t\t\t\t{ method: \"post\", ref: \"form\", onSubmit: this.update },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"fieldset\",\n\t\t\t\t\tnull,\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"legend\",\n\t\t\t\t\t\t{ className: \"blind\" },\n\t\t\t\t\t\t\"Settings form\"\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"h1\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\"Settings\"\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"dl\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dt\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t{ htmlhtmlFor: \"frm_name\" },\n\t\t\t\t\t\t\t\t\"Min Width\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dd\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\t\t\t\ttype: \"number\", name: \"width\", id: \"frm_name\",\n\t\t\t\t\t\t\t\tmin: \"1\", max: \"999\", maxLength: \"3\",\n\t\t\t\t\t\t\t\tdefaultValue: this.props.preference.width,\n\t\t\t\t\t\t\t\trequired: true }),\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"span\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\"px\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"dl\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dt\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t{ htmlFor: \"frm_height\" },\n\t\t\t\t\t\t\t\t\"Min Height\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dd\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\t\t\t\ttype: \"number\", name: \"height\", id: \"frm_height\",\n\t\t\t\t\t\t\t\tmin: \"1\", max: \"999\",\n\t\t\t\t\t\t\t\tdefaultValue: this.props.preference.height }),\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"span\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\"px\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"dl\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dt\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t{ htmlFor: \"frm_max_col\" },\n\t\t\t\t\t\t\t\t\"Max Column\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dd\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\t\t\t\ttype: \"number\", name: \"max_col\", id: \"frm_max_col\",\n\t\t\t\t\t\t\t\tmin: \"1\", max: \"99\",\n\t\t\t\t\t\t\t\tdefaultValue: this.props.preference.max_col }),\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"span\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\"ea\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"dl\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dt\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t{ htmlFor: \"frm_max_scale\" },\n\t\t\t\t\t\t\t\t\"Max Scale\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dd\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\t\t\t\ttype: \"number\", name: \"max_scale\", id: \"frm_max_scale\",\n\t\t\t\t\t\t\t\tmin: \"1\", max: \"99\",\n\t\t\t\t\t\t\t\tdefaultValue: this.props.preference.max_scale }),\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"span\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\"x\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"dl\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dt\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t{ htmlFor: \"frm_outer_margin\" },\n\t\t\t\t\t\t\t\t\"Outer Margin\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dd\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\t\t\t\ttype: \"number\", name: \"outer_margin\", id: \"frm_outer_margin\",\n\t\t\t\t\t\t\t\tmin: \"1\", max: \"500\",\n\t\t\t\t\t\t\t\tdefaultValue: this.props.preference.outer_margin }),\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"span\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\"px\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"dl\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dt\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"label\",\n\t\t\t\t\t\t\t\t{ htmlFor: \"frm_inner_margin\" },\n\t\t\t\t\t\t\t\t\"Inner Margin\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"dd\",\n\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\tReact.createElement(\"input\", {\n\t\t\t\t\t\t\t\ttype: \"number\", name: \"inner_margin\", id: \"frm_inner_margin\",\n\t\t\t\t\t\t\t\tmin: \"1\", max: \"500\",\n\t\t\t\t\t\t\t\tdefaultValue: this.props.preference.inner_margin }),\n\t\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\t\"span\",\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\"px\"\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t\"nav\",\n\t\t\t\t\tnull,\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"span\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"button\",\n\t\t\t\t\t\t\t{ type: \"reset\", onClick: this.props.reset },\n\t\t\t\t\t\t\t\"Reset\"\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\"span\",\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t\"button\",\n\t\t\t\t\t\t\t{ type: \"submit\", className: \"submit\" },\n\t\t\t\t\t\t\t\"Apply\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/container/NavTop.Form.jsx\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/container/NavTop.Form.jsx?");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar util = __webpack_require__(8);\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'Gridster',\n\n\t$gridster: null,\n\t$wrap: null,\n\tgridster: null,\n\tsaveBlocks: null,\n\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.$gridster = $(ReactDOM.findDOMNode(this.refs.gridster));\n\t\tthis.$wrap = this.$gridster.parent();\n\t},\n\n\n\t/**\r\n  * Create block\r\n  */\n\tcreate: function create() {\n\t\tvar pref = this.props.preference;\n\t\tvar innnerMargin = pref.inner_margin * 0.5;\n\t\tvar outerMargin = innnerMargin + pref.outer_margin;\n\n\t\t// set styles\n\t\tthis.$gridster.css('padding', outerMargin + 'px').append('<ul/>');\n\n\t\t// restore blocks\n\t\tif (this.saveBlocks) {\n\t\t\tthis.saveBlocks.each(function (k, o) {\n\t\t\t\tif (parseInt($(o).attr('data-col')) > pref.max_col) {\n\t\t\t\t\t$(o).attr('data-col', pref.max_col);\n\t\t\t\t}\n\t\t\t\tif (parseInt($(o).attr('data-sizex')) > pref.max_scale) {\n\t\t\t\t\t$(o).attr('data-sizex', pref.max_scale);\n\t\t\t\t}\n\t\t\t\tif (parseInt($(o).attr('data-sizey')) > pref.max_scale) {\n\t\t\t\t\t$(o).attr('data-sizey', pref.max_scale);\n\t\t\t\t}\n\t\t\t\tif ($(o).children('figure').length) {\n\t\t\t\t\t$(o).addClass('attached');\n\t\t\t\t}\n\t\t\t\t$(o).children('.gs-resize-handle').remove();\n\t\t\t});\n\t\t\tthis.$gridster.children('ul').append(this.saveBlocks);\n\t\t}\n\n\t\t// resize wrap width\n\t\tthis.resizeWrapWidth();\n\n\t\t// init gridster\n\t\tthis.gridster = this.$gridster.children('ul').gridster({\n\t\t\twidget_margins: [innnerMargin, innnerMargin],\n\t\t\twidget_base_dimensions: [pref.width, pref.height],\n\t\t\tmax_cols: pref.max_col,\n\t\t\tresize: {\n\t\t\t\tenabled: true,\n\t\t\t\tmax_size: [pref.max_scale, pref.max_scale]\n\t\t\t}\n\t\t}).data('gridster');\n\n\t\t// init block event\n\t\tif (this.$gridster.find('li').length) {\n\t\t\tthis.initBlockEvent(this.$gridster.find('li'));\n\t\t}\n\n\t\t// act unselected\n\t\tthis.unSelectBlock();\n\t},\n\n\n\t/**\r\n  * Resize container\r\n  */\n\tresizeWrapWidth: function resizeWrapWidth() {\n\t\tvar pref = this.props.preference;\n\t\tvar width = pref.width * pref.max_col + pref.max_col * pref.inner_margin;\n\t\tthis.$gridster.width(width);\n\n\t\tvar margin_gridster = parseInt(this.$gridster.parent().css('padding-left')) * 2;\n\t\tvar margin_editor = parseInt($('.ple-editor').css('padding')) * 2;\n\t\tvar width_sidebar = $('.ple-sidebar').width();\n\t\tvar bodyWidth = this.$gridster.outerWidth() + margin_gridster + margin_editor + width_sidebar;\n\n\t\tthis.props.resizeWidth(bodyWidth);\n\t},\n\n\n\t/**\r\n  * Clear blocks\r\n  */\n\tclear: function clear() {\n\t\tthis.$gridster.find('li').removeAttr('style class');\n\t\tthis.saveBlocks = $(this.$gridster.children('ul').html());\n\t\tthis.gridster.destroy(true);\n\t\tthis.$gridster.children().remove();\n\t\tthis.$gridster.removeClass('ready').removeAttr('style');\n\t},\n\n\n\t/**\r\n  * Init gridster\r\n  */\n\tinit: function init() {\n\t\tthis.create();\n\t\tthis.randomAddBlocks(5, this.props.preference.max_scale, this.props.preference.max_scale);\n\t},\n\n\n\t/**\r\n  * Update preference\r\n  */\n\tupdatePreference: function updatePreference() {\n\t\tthis.clear();\n\t\tthis.create();\n\t},\n\n\n\t/**\r\n  * Make block\r\n  *\r\n  * @param {object} params\r\n  */\n\tblock: function block(params) {\n\t\tif (!params.sizeX || !params.sizeY) return false;\n\n\t\tvar $li = $('<li' + (params.classNames ? ' class=\"' + params.classNames + '\"' : '') + '>' + (params.text ? params.text : '') + '</li>');\n\n\t\t// add gridster\n\t\tthis.gridster.add_widget($li, params.sizeX, params.sizeY, false);\n\n\t\t// init event\n\t\tthis.initBlockEvent($li);\n\t},\n\n\n\t/**\r\n  * Init block event\r\n  *\r\n  * @param {object} $block\r\n  */\n\tinitBlockEvent: function initBlockEvent($block) {\n\t\tvar self = this;\n\n\t\t$block.on('click', function (e) {\n\t\t\tvar $block = $(e.currentTarget);\n\t\t\tvar $blocks = self.$gridster.find('li');\n\t\t\tvar className = 'selected';\n\n\t\t\te.stopPropagation();\n\n\t\t\tif ($block.hasClass('selected')) {\n\t\t\t\t$block.removeClass(className);\n\t\t\t\tself.props.selectBlock(null);\n\t\t\t} else {\n\t\t\t\t$blocks.removeClass(className);\n\t\t\t\t$block.addClass(className);\n\t\t\t\tself.props.selectBlock($blocks.filter('.' + className));\n\t\t\t\tself.$wrap.off('click.gridsterBlock').on('click.gridsterBlock', function (e) {\n\t\t\t\t\t$blocks.removeClass(className);\n\t\t\t\t\tself.props.selectBlock(null);\n\t\t\t\t\t$(this).off('click.gridsterBlock');\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\n\t/**\r\n  * Remove block\r\n  */\n\tremoveBlock: function removeBlock() {\n\t\tthis.gridster.remove_widget(this.$gridster.find('li.selected'));\n\t\tthis.unSelectBlock();\n\t},\n\n\n\t/**\r\n  * Empty block\r\n  */\n\temptyBlock: function emptyBlock() {\n\t\tthis.$gridster.find('li.selected').each(function (k, v) {\n\t\t\tif ($(v).hasClass('attached')) {\n\t\t\t\t$(v).removeClass('attached').children('figure').remove();\n\t\t\t}\n\t\t});\n\t},\n\n\n\t/**\r\n  * Duplicate block\r\n  */\n\tduplicateBlock: function duplicateBlock() {\n\t\tvar _this = this;\n\n\t\tthis.$gridster.find('li.selected').each(function (k, v) {\n\t\t\t_this.block({\n\t\t\t\tsizeX: parseInt(v.getAttribute('data-sizex')),\n\t\t\t\tsizeY: parseInt(v.getAttribute('data-sizey')),\n\t\t\t\ttext: $(v).hasClass('attached') ? $(v).children('figure').prop('outerHTML') : '',\n\t\t\t\tclassNames: $(v).hasClass('attached') ? 'attached' : ''\n\t\t\t});\n\t\t});\n\t},\n\n\n\t/**\r\n  * unselect block\r\n  *\r\n  */\n\tunSelectBlock: function unSelectBlock() {\n\t\tvar _this2 = this;\n\n\t\tsetTimeout(function () {\n\t\t\t_this2.$wrap.trigger('click.gridsterBlock');\n\t\t}, 50);\n\t},\n\n\n\t/**\r\n  * Random add blocks\r\n  *\r\n  * @param {int} count\r\n  * @param {int} max_width\r\n  * @param {int} max_height\r\n  */\n\trandomAddBlocks: function randomAddBlocks(count, max_width, max_height) {\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tthis.block({\n\t\t\t\tsizeX: util.getRandomRange(1, max_width),\n\t\t\t\tsizeY: util.getRandomRange(1, max_height)\n\t\t\t});\n\t\t}\n\t},\n\n\n\t/**\r\n  * Add block\r\n  *\r\n  * @param {int} x\r\n  * @param {int} y\r\n  */\n\taddBlock: function addBlock(x, y) {\n\t\tx = x || 1;\n\t\ty = y || 1;\n\t\tx = x > this.props.preference.max_scale ? this.props.preference.max_scale : x;\n\t\ty = y > this.props.preference.max_scale ? this.props.preference.max_scale : y;\n\t\tthis.block({ sizeX: x, sizeY: y });\n\t},\n\n\n\t/**\r\n  * Shuffle blocks\r\n  */\n\tshuffleBlocks: function shuffleBlocks() {\n\t\tvar _this3 = this;\n\n\t\tthis.clear();\n\n\t\tthis.saveBlocks.each(function (k, o) {\n\t\t\t$(o).attr({\n\t\t\t\t'data-col': util.getRandomRange(1, _this3.props.preference.max_col),\n\t\t\t\t'data-row': util.getRandomRange(1, 2),\n\t\t\t\t'data-sizex': util.getRandomRange(1, _this3.props.preference.max_scale),\n\t\t\t\t'data-sizey': util.getRandomRange(1, _this3.props.preference.max_scale)\n\t\t\t});\n\t\t});\n\n\t\tthis.create();\n\t},\n\n\n\t/**\r\n  * Attach images\r\n  *\r\n  * @param {array} images\r\n  */\n\tattachImages: function attachImages(images) {\n\t\tvar _this4 = this;\n\n\t\tvar $blocks = this.$gridster.find('li').not('.attached');\n\n\t\tif (images.length > $blocks.length) {\n\t\t\tvar total = images.length - $blocks.length;\n\t\t\tfor (var i = 0; i < total; i++) {\n\t\t\t\tthis.addBlock();\n\t\t\t}\n\t\t\t$blocks = this.$gridster.find('li').not('.attached');\n\t\t}\n\n\t\tvar baskets = [];\n\t\t$blocks.each(function (k, o) {\n\t\t\tif (!$(o).children('figure').length && k < images.length) {\n\t\t\t\tbaskets.push(o);\n\t\t\t}\n\t\t});\n\n\t\tbaskets.forEach(function (o, k) {\n\t\t\t_this4.assignImage($(o), images[k], null);\n\t\t});\n\n\t\t// act unselected\n\t\tthis.unSelectBlock();\n\t},\n\n\n\t/**\r\n  * Assign image\r\n  *\r\n  * @param {object} $target\r\n  * @param {string} image\r\n  * @param {object} imageOptions\r\n  */\n\tassignImage: function assignImage($target, image, imageOptions) {\n\t\tvar $figure = $('<figure/>');\n\t\t$figure.css({\n\t\t\t'background-image': 'url(' + image + ')',\n\t\t\t'background-position': imageOptions ? imageOptions.position : '50% 50%',\n\t\t\t'background-size': imageOptions ? imageOptions.size : 'cover'\n\t\t}).attr({\n\t\t\t'data-image': image,\n\t\t\t'data-position': imageOptions ? imageOptions.position : '50% 50%',\n\t\t\t'data-size': imageOptions ? imageOptions.size : 'cover'\n\t\t});\n\t\t$target.addClass('attached').prepend($figure);\n\n\t\tif ($target.hasClass('selected')) {\n\t\t\tthis.props.selectBlock($target);\n\t\t}\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\t// act action\n\t\tif (typeof this[this.props.action] === 'function') {\n\t\t\tthis[this.props.action]();\n\t\t}\n\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'gridster-wrap' },\n\t\t\tReact.createElement('div', { ref: 'gridster', className: 'gridster', id: 'gridster' })\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/container/Gridster.jsx\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/container/Gridster.jsx?");

/***/ },
/* 8 */
/***/ function(module, exports) {

	eval("module.exports = {\r\n\r\n\t/**\r\n\t * Random item in range\r\n\t * @param {int} min\r\n\t * @param {int} max\r\n\t * @returns {number}\r\n\t */\r\n\tgetRandomRange : function(min, max)\r\n\t{\r\n\t\tmax += 1;\r\n\t\treturn Math.floor(Math.random() * (max - min) + min);\r\n\t}\r\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/lib/util.js\n ** module id = 8\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/lib/util.js?");

/***/ },
/* 9 */
/***/ function(module, exports) {

	eval("'use strict';\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'Nav-bottom',\n\n\tactGenerator: function actGenerator() {\n\t\tlog('ACTION GENERATE');\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t'nav',\n\t\t\t{ className: 'nav-bottom' },\n\t\t\tReact.createElement(\n\t\t\t\t'button',\n\t\t\t\t{ type: 'button', title: 'Generate export', onClick: this.props.generate },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'span',\n\t\t\t\t\tnull,\n\t\t\t\t\t'Generate'\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/container/NavBottom.jsx\n ** module id = 9\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/container/NavBottom.jsx?");

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar Uploader = __webpack_require__(11);\nvar Nav = __webpack_require__(12);\nvar UploadFiles = __webpack_require__(13);\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'Sidebar',\n\n\tpropTypes: {\n\t\tuploadScript: React.PropTypes.string,\n\t\tdefaultUploadFiles: React.PropTypes.array\n\t},\n\n\tuploader: new Uploader(),\n\n\tgetDefaultProps: function getDefaultProps() {\n\t\treturn {\n\t\t\tuploadScript: null,\n\t\t\tremoveScript: null,\n\t\t\tdefaultImagesScript: null,\n\t\t\tshow: false,\n\t\t\ttoggleSidebar: null\n\t\t};\n\t},\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tuploadImages: [],\n\t\t\tis_loading: false\n\t\t};\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tvar _this = this;\n\n\t\t$.get(this.props.defaultImagesScript, function (response) {\n\t\t\tvar result = JSON.parse(response.replace(/\\+/g, '%20'));\n\t\t\t_this.setState({\n\t\t\t\tuploadImages: _this.importImages(result)\n\t\t\t});\n\t\t});\n\t},\n\n\n\t/**\r\n  * Import images\r\n  *\r\n  * @param {array} files\r\n  * @return {array}\r\n  * */\n\timportImages: function importImages(files) {\n\t\tfiles = files || [];\n\t\treturn files.map(function (o) {\n\t\t\treturn {\n\t\t\t\ton: false,\n\t\t\t\timage: o,\n\t\t\t\tstyle: { backgroundImage: 'url(' + o + ')' }\n\t\t\t};\n\t\t});\n\t},\n\n\n\t/**\r\n  * upload images\r\n  *\r\n  * @Param {Files} files\r\n  */\n\tupload: function upload(files) {\n\t\tvar _this2 = this;\n\n\t\tvar uploadFiles = [];\n\n\t\tfor (var i = 0; i < files.length; i++) {\n\t\t\tuploadFiles.push(files[i]);\n\t\t}\n\n\t\t// on loading\n\t\tthis.setState({ is_loading: true });\n\n\t\t// action upload\n\t\tif (this.props.uploadScript) {\n\t\t\t// is external script upload\n\t\t\tthis.uploader.external(this.props.uploadScript, this.props.uploadDir, this.props.uploadUrl, uploadFiles, function (response) {\n\t\t\t\t_this2.setState({ is_loading: false });\n\n\t\t\t\tif (response.state == 'success') {\n\t\t\t\t\tvar data = response.images;\n\n\t\t\t\t\tdata.forEach(function (o) {\n\t\t\t\t\t\t_this2.state.uploadImages.push({\n\t\t\t\t\t\t\ton: false,\n\t\t\t\t\t\t\timage: o.loc,\n\t\t\t\t\t\t\tstyle: { backgroundImage: 'url(' + o.loc + ')' }\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t_this2.setState({\n\t\t\t\t\t\tuploadImages: _this2.state.uploadImages\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tlog(response.message);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// is local upload\n\t\t\tthis.setState({ is_loading: true });\n\t\t\tthis.uploader.local(uploadFiles, function (data) {\n\t\t\t\tvar result = _this2.state.uploadImages;\n\t\t\t\t_this2.setState({ is_loading: false });\n\n\t\t\t\tdata.forEach(function (o) {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ton: false,\n\t\t\t\t\t\timage: o,\n\t\t\t\t\t\tstyle: { backgroundImage: 'url(' + o + ')' }\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t_this2.setState({ uploadImages: result });\n\t\t\t});\n\t\t}\n\t},\n\tremove: function remove() {\n\t\tvar _this3 = this;\n\n\t\tvar selectedKeys = [];\n\t\tvar removeImages = [];\n\t\tvar confirmBool = false;\n\n\t\tif (!this.state.uploadImages.length) {\n\t\t\talert('이미지가 없습니다.');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.uploadImages.forEach(function (o, k) {\n\t\t\tif (o.on) {\n\t\t\t\tselectedKeys.push(k);\n\t\t\t}\n\t\t});\n\n\t\tif (selectedKeys.length) {\n\t\t\tif (confirm('선택한 사진을 삭제할까요?')) {\n\t\t\t\tconfirmBool = true;\n\t\t\t\tselectedKeys.forEach(function (o) {\n\t\t\t\t\tremoveImages.push(_this3.state.uploadImages[o].image);\n\t\t\t\t\tdelete _this3.state.uploadImages[o];\n\t\t\t\t});\n\t\t\t\tthis.setState({ uploadImages: this.state.uploadImages });\n\t\t\t}\n\t\t} else {\n\t\t\tif (confirm('선택된 사진이 없습니다. 전부 삭제할까요?')) {\n\t\t\t\tconfirmBool = true;\n\t\t\t\tremoveImages = this.state.uploadImages.map(function (o) {\n\t\t\t\t\treturn o.image;\n\t\t\t\t});\n\t\t\t\tthis.setState({ uploadImages: [] });\n\t\t\t}\n\t\t}\n\n\t\t// remove real files\n\t\tif (this.props.removeScript && confirmBool && removeImages.length) {\n\t\t\t$.post(this.props.removeScript, { 'images[]': removeImages }, function (response) {\n\t\t\t\t//log(response);\n\t\t\t});\n\t\t}\n\t},\n\tattach: function attach() {\n\t\tvar items = [];\n\t\tthis.state.uploadImages.forEach(function (o) {\n\t\t\tif (o.on) {\n\t\t\t\titems.push(o.image);\n\t\t\t}\n\t\t});\n\t\tif (items.length) {\n\t\t\twindow.app.refs.container.refs.gridster.attachImages(items);\n\t\t} else {\n\t\t\talert('please select image');\n\t\t\treturn false;\n\t\t}\n\t},\n\ttoggleSelect: function toggleSelect() {\n\t\tvar items = this.state.uploadImages;\n\t\tvar $items = $(ReactDOM.findDOMNode(this.refs.files));\n\t\tvar sw = $items.find('span.on').length > 0;\n\t\titems.forEach(function (o) {\n\t\t\to.on = !sw;\n\t\t});\n\t\tthis.setState({ uploadImages: items });\n\t},\n\tupdate: function update(data) {\n\t\tthis.setState({ uploadImages: data });\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t'aside',\n\t\t\t{ className: 'ple-sidebar' + (this.state.is_loading ? ' loading' : '') },\n\t\t\tReact.createElement(\n\t\t\t\t'button',\n\t\t\t\t{ type: 'button', onClick: this.props.toggleSidebar, className: 'toggle' },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'span',\n\t\t\t\t\tnull,\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'i',\n\t\t\t\t\t\t{ className: 'sp-ico abs' + (this.props.show ? ' ico-arrow-right' : ' ico-arrow-left') },\n\t\t\t\t\t\t'Toggle sidebar'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tReact.createElement(Nav, { ref: 'nav',\n\t\t\t\tupload: this.upload,\n\t\t\t\tremove: this.remove,\n\t\t\t\tattach: this.attach,\n\t\t\t\ttoggleSelect: this.toggleSelect }),\n\t\t\tReact.createElement(UploadFiles, { ref: 'files',\n\t\t\t\tuploadImages: this.state.uploadImages,\n\t\t\t\tupdate: this.update })\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/sidebar/Sidebar.jsx\n ** module id = 10\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/sidebar/Sidebar.jsx?");

/***/ },
/* 11 */
/***/ function(module, exports) {

	eval("module.exports = function Uploader()\r\n{\r\n\t/**\r\n\t * Local upload\r\n\t *\r\n\t * @param {Array} files\r\n\t * @param {Function} complete\r\n\t * @return {Array}\r\n\t */\r\n\tthis.local = function(files, complete)\r\n\t{\r\n\t\tvar reader = new FileReader();\r\n\t\tvar i = 0;\r\n\t\tvar result = [];\r\n\t\treader.onload = function(e)\r\n\t\t{\r\n\t\t\tresult.push(e.target.result);\r\n\r\n\t\t\t// check last queue\r\n\t\t\tif (i == (files.length - 1))\r\n\t\t\t{\r\n\t\t\t\tcomplete(result);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// trigger next queue\r\n\t\t\t\ti++;\r\n\t\t\t\treader.readAsDataURL(files[i]);\r\n\t\t\t}\r\n\t\t};\r\n\t\treader.readAsDataURL(files[i]);\r\n\t};\r\n\r\n\t/**\r\n\t * External upload\r\n\t *\r\n\t * @param {String} script\r\n\t * @param {String} dir\r\n\t * @param {String} url\r\n\t * @param {Array} files\r\n\t * @param {Function} complete\r\n\t * @return {Array}\r\n\t */\r\n\tthis.external = function(script, dir, url, files, complete)\r\n\t{\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\r\n\t\tif (typeof FormData === 'function' || typeof FormData === 'object')\r\n\t\t{\r\n\t\t\tvar formData = new FormData();\r\n\r\n\t\t\tfor (var i=0; i<files.length; i++)\r\n\t\t\t{\r\n\t\t\t\tformData.append('files[]', files[i]);\r\n\t\t\t}\r\n\t\t\tformData.append('dir', dir);\r\n\t\t\tformData.append('url', url);\r\n\r\n\t\t\txhr.open('post', script, true);\r\n\t\t\txhr.addEventListener('load', function(e){\r\n\t\t\t\tvar response = null;\r\n\t\t\t\tif (e.target.readyState == 4)\r\n\t\t\t\t{\r\n\t\t\t\t\tswitch (e.target.status)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 200:\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tvar result = JSON.parse(e.target.responseText.replace(/\\+/g, '%20'));\r\n\t\t\t\t\t\t\t\tcomplete(result);\r\n\t\t\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t\t\tcomplete({\r\n\t\t\t\t\t\t\t\t\t'state' : 'error',\r\n\t\t\t\t\t\t\t\t\t'message' : e.target.responseText\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 404:\r\n\t\t\t\t\t\t\tresponse = {\r\n\t\t\t\t\t\t\t\tstate : 'error',\r\n\t\t\t\t\t\t\t\tmessage : '404 - File not found'\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 403:\r\n\t\t\t\t\t\t\tresponse = {\r\n\t\t\t\t\t\t\t\tstate : 'error',\r\n\t\t\t\t\t\t\t\tmessage : '403 - Forbidden file type'\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tresponse = {\r\n\t\t\t\t\t\t\t\tstate : 'error',\r\n\t\t\t\t\t\t\t\tmessage : 'Unknown Error'\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tresponse = {\r\n\t\t\t\t\t\tstate : 'error',\r\n\t\t\t\t\t\tmessage : 'Unknown Error'\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\txhr.send(formData);\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n};\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/lib/Uploader.js\n ** module id = 11\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/lib/Uploader.js?");

/***/ },
/* 12 */
/***/ function(module, exports) {

	eval("'use strict';\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'Navigation',\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tinputFile: React.createElement('input', { type: 'file', onChange: this.upload, multiple: true })\n\t\t};\n\t},\n\n\n\t/**\r\n  * Upload images\r\n  *\r\n  * @param {Event} e\r\n  */\n\tupload: function upload(e) {\n\t\tthis.props.upload(e.target.files);\n\n\t\t// reset input[type=file]\n\t\tvar $input = $(this.refs.inputFile);\n\t\t$input.replaceWith($input.val('').clone(true));\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t'nav',\n\t\t\t{ className: 'nav-top' },\n\t\t\tReact.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'wrap' },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'button',\n\t\t\t\t\t{ type: 'button', title: 'attach images', onClick: this.props.attach },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'i',\n\t\t\t\t\t\t{ className: 'sp-ico ico-reply abs' },\n\t\t\t\t\t\t'Moving the image to grid block'\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'button',\n\t\t\t\t\t{ type: 'button', title: 'toggle select', onClick: this.props.toggleSelect },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'i',\n\t\t\t\t\t\t{ className: 'sp-ico ico-select abs' },\n\t\t\t\t\t\t'Toggle all select'\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'span',\n\t\t\t\t\t{ title: 'upload images' },\n\t\t\t\t\tReact.createElement('input', { type: 'file', ref: 'inputFile', onChange: this.upload, multiple: true }),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'i',\n\t\t\t\t\t\t{ className: 'sp-ico ico-upload abs' },\n\t\t\t\t\t\t'upload images'\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'button',\n\t\t\t\t\t{ type: 'button', title: 'remove images', onClick: this.props.remove },\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'i',\n\t\t\t\t\t\t{ className: 'sp-ico ico-trash abs' },\n\t\t\t\t\t\t'remove images'\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/sidebar/Nav.jsx\n ** module id = 12\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/sidebar/Nav.jsx?");

/***/ },
/* 13 */
/***/ function(module, exports) {

	eval("'use strict';\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'UploadFiles',\n\n\tpropTypes: {\n\t\tuploadImages: React.PropTypes.array,\n\t\tupdate: React.PropTypes.func\n\t},\n\tis_multiSelect: false,\n\n\t$gridster: null,\n\tdragTarget: null,\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {};\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tvar _this = this;\n\n\t\tvar CTRL = 17;\n\t\tvar CMD = 91;\n\n\t\tvar onKeydown = function onKeydown(e) {\n\t\t\tif (e.keyCode == CTRL || e.keyCode == CMD) {\n\t\t\t\t_this.is_multiSelect = true;\n\t\t\t\t$(window).off('keydown').on('keyup', onKeyUp);\n\t\t\t}\n\t\t};\n\n\t\tvar onKeyUp = function onKeyUp() {\n\t\t\t_this.is_multiSelect = false;\n\t\t\t$(window).off('keyup').on('keydown', onKeydown);\n\t\t};\n\n\t\t$(window).on('keydown', onKeydown);\n\n\t\tthis.$gridster = $('.gridster');\n\t},\n\n\n\t/**\r\n  * on select item\r\n  *\r\n  * @param {event} e\r\n  */\n\tonSelect: function onSelect(e) {\n\t\tvar currentKey = parseInt(e.currentTarget.getAttribute('data-key'));\n\t\tvar uploadImages = this.props.uploadImages;\n\n\t\tif (this.is_multiSelect) {\n\t\t\tuploadImages[currentKey].on = !uploadImages[currentKey].on;\n\t\t} else {\n\t\t\tuploadImages.forEach(function (data, key) {\n\t\t\t\tdata.on = key == currentKey ? !data.on : false;\n\t\t\t});\n\t\t}\n\n\t\tthis.props.update(uploadImages);\n\t},\n\n\n\t/**\r\n  * on drag start\r\n  *\r\n  * @param {event} e\r\n  */\n\tonDragStart: function onDragStart(e) {\n\t\tvar _this2 = this;\n\n\t\tthis.$gridster.find('li').on('dragover', function (e) {\n\t\t\te.preventDefault();\n\t\t\t$(e.currentTarget).addClass('hover');\n\t\t}).on('dragleave', function (e) {\n\t\t\te.preventDefault();\n\t\t\t$(e.currentTarget).removeClass('hover');\n\t\t}).on('drop', function (e) {\n\t\t\te.preventDefault();\n\t\t\t_this2.dragTarget = e.currentTarget;\n\t\t});\n\t},\n\n\n\t/**\r\n  * on drag end\r\n  *\r\n  * @param {event} e\r\n  */\n\tonDragEnd: function onDragEnd(e) {\n\t\tthis.$gridster.find('li').removeClass('hover').off('dragover dragleave drop');\n\n\t\tif (this.dragTarget) {\n\t\t\tvar img = this.props.uploadImages[parseInt(e.currentTarget.getAttribute('data-key'))].image;\n\t\t\twindow.app.refs.container.refs.gridster.assignImage($(this.dragTarget), img, null);\n\t\t\tthis.dragTarget = null;\n\t\t}\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\tvar _this3 = this;\n\n\t\tvar items = [];\n\n\t\t// make item elements\n\t\tthis.props.uploadImages.forEach(function (item, key) {\n\t\t\titems.push(React.createElement(\n\t\t\t\t'li',\n\t\t\t\t{ key: key, 'data-key': key, draggable: 'true',\n\t\t\t\t\tonClick: _this3.onSelect,\n\t\t\t\t\tonDragStart: _this3.onDragStart,\n\t\t\t\t\tonDragEnd: _this3.onDragEnd },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'span',\n\t\t\t\t\t{ style: item.style, className: item.on ? 'on' : '' },\n\t\t\t\t\t'.img'\n\t\t\t\t)\n\t\t\t));\n\t\t});\n\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'upload-files' },\n\t\t\tReact.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'wrap' },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'ul',\n\t\t\t\t\t{ ref: 'items' },\n\t\t\t\t\titems\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/sidebar/UploadFiles.jsx\n ** module id = 13\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/sidebar/UploadFiles.jsx?");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar Item = __webpack_require__(15);\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'Cropper',\n\t$activeElement: null,\n\tgridster: null,\n\n\tgetInitialState: function getInitialState() {\n\t\treturn {\n\t\t\tshow: false,\n\t\t\twrapStyle: null,\n\t\t\timage: null,\n\t\t\tshowImageResize: false\n\t\t};\n\t},\n\tcomponentDidMount: function componentDidMount() {},\n\n\n\t/**\r\n  * resize window event\r\n  *\r\n  */\n\tresize: function resize(e) {\n\t\tif (!this.$activeElement.length) return false;\n\n\t\tthis.setState({\n\t\t\twrapStyle: {\n\t\t\t\twidth: this.$activeElement.width() + 'px',\n\t\t\t\theight: this.$activeElement.height() + 'px',\n\t\t\t\tleft: this.$activeElement.offset().left + 'px',\n\t\t\t\ttop: this.$activeElement.offset().top + 'px'\n\t\t\t}\n\t\t});\n\t},\n\n\n\t/**\r\n  * open\r\n  *\r\n  * @param {object} options\r\n  */\n\topen: function open(options) {\n\t\tif (!options) return false;\n\n\t\t// set active element\n\t\tthis.$activeElement = options.$selected;\n\n\t\t// update\n\t\tthis.setState({\n\t\t\tshow: true,\n\t\t\timage: options.image,\n\t\t\tshowImageResize: !(options.image.size == 'cover')\n\t\t});\n\n\t\t// on resize event\n\t\t$(window).on('resize.cropper', this.resize);\n\n\t\tsetTimeout(function () {\n\t\t\t// trigger resize event\n\t\t\t$(window).trigger('resize.cropper');\n\t\t}, 30);\n\t},\n\n\n\t/**\r\n  * close\r\n  *\r\n  */\n\tclose: function close() {\n\t\t// update\n\t\tthis.setState({\n\t\t\tshow: false,\n\t\t\twrapStyle: null,\n\t\t\timage: null,\n\t\t\tshowImageResize: false\n\t\t});\n\n\t\t// off resize event\n\t\t$(window).off('resize.cropper');\n\n\t\t// update item\n\t\tthis.updateSelectImage(this.refs.item.imageMeta);\n\t\tthis.refs.item.clear();\n\t},\n\tupdateSelectImage: function updateSelectImage(option) {\n\t\tthis.$activeElement.children('figure').css({\n\t\t\t'background-position': option.position,\n\t\t\t'background-size': option.size\n\t\t}).attr({\n\t\t\t'data-position': option.position,\n\t\t\t'data-size': option.size\n\t\t});\n\n\t\t// this.refs.item.imageMeta\n\t},\n\n\n\t/**\r\n  * Toggle image resize\r\n  *\r\n  */\n\ttoggleImageResize: function toggleImageResize() {\n\t\tvar newImage = this.state.image;\n\n\t\tif (this.state.showImageResize) {\n\t\t\tthis.setState({\n\t\t\t\timage: {\n\t\t\t\t\turl: this.state.image.url,\n\t\t\t\t\tsize: 'cover',\n\t\t\t\t\tposition: '50% 50%'\n\t\t\t\t},\n\t\t\t\tshowImageResize: false\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\timage: {\n\t\t\t\t\turl: this.state.image.url,\n\t\t\t\t\tsize: this.$activeElement.width() + 'px auto',\n\t\t\t\t\tposition: '0 0'\n\t\t\t\t},\n\t\t\t\tshowImageResize: true\n\t\t\t});\n\t\t}\n\t},\n\n\n\t/**\r\n  * Go to center image\r\n  *\r\n  */\n\tcenterImage: function centerImage() {\n\t\tthis.refs.item.gotoCenter();\n\t},\n\n\n\t/**\r\n  * render\r\n  *\r\n  */\n\trender: function render() {\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ className: 'ple-cropper' + (this.state.show ? ' show' : '') },\n\t\t\tReact.createElement('span', { className: 'bg' }),\n\t\t\tReact.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: 'wrap', style: this.state.wrapStyle },\n\t\t\t\tReact.createElement(Item, { ref: 'item', options: this.state.image }),\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'nav',\n\t\t\t\t\tnull,\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', onClick: this.close },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-close abs' },\n\t\t\t\t\t\t\t'Close cropper'\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', className: this.state.showImageResize ? 'active' : '', onClick: this.toggleImageResize },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-resize abs' },\n\t\t\t\t\t\t\t'Toggle background size type'\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tthis.state.showImageResize ? React.createElement(\n\t\t\t\t\t\t'button',\n\t\t\t\t\t\t{ type: 'button', onClick: this.centerImage },\n\t\t\t\t\t\tReact.createElement(\n\t\t\t\t\t\t\t'i',\n\t\t\t\t\t\t\t{ className: 'sp-ico ico-reduction abs' },\n\t\t\t\t\t\t\t'Go to center image'\n\t\t\t\t\t\t)\n\t\t\t\t\t) : ''\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/cropper/Cropper.jsx\n ** module id = 14\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/cropper/Cropper.jsx?");

/***/ },
/* 15 */
/***/ function(module, exports) {

	eval("'use strict';\n\nmodule.exports = React.createClass({\n\n\tdisplayName: 'Item',\n\t$figure: null,\n\t$area: null,\n\t$img: null,\n\tdragMeta: {},\n\timageMeta: {},\n\n\tsetInitialProps: function setInitialProps() {\n\t\treturn {\n\t\t\toptions: {\n\t\t\t\tsize: 'cover'\n\t\t\t}\n\t\t};\n\t},\n\tcomponentDidMount: function componentDidMount() {\n\t\tthis.$figure = $(this.refs.figure);\n\t\tthis.$area = $(this.refs.area);\n\n\t\t// act init drag event\n\t\tthis.initDragEvent(this.$area);\n\t},\n\tcomponentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n\t\tif (this.props.options) {\n\t\t\tthis.imageMeta = this.props.options;\n\t\t\t//log(this.props.options);\n\t\t\tif (this.props.options.size !== 'cover') {\n\t\t\t\tvar $img = this.$figure.find('> .img-wrap > img');\n\t\t\t\tthis.$area.css({\n\t\t\t\t\tleft: $img.position().left,\n\t\t\t\t\ttop: $img.position().top,\n\t\t\t\t\twidth: $img.width(),\n\t\t\t\t\theight: $img.height()\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.$area.attr('style', '');\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\r\n  * Save drag meta\r\n  *\r\n  * @param {event} e\r\n  * @param {object} $container\r\n  */\n\tsaveDragMeta: function saveDragMeta(e, $container) {\n\t\tvar obj = {\n\t\t\tcontainerWidth: $container.width(),\n\t\t\tcontainerHeight: $container.height(),\n\t\t\tcontainerLeft: $container.offset().left,\n\t\t\tcontainerTop: $container.offset().top,\n\t\t\tmouseX: (e.clientX || e.pageX || e.originalEvent.touches[0].clientX) + $(window).scrollLeft(),\n\t\t\tmouseY: (e.clientY || e.pageY || e.originalEvent.touches[0].clientY) + $(window).scrollTop(),\n\t\t\tevnt: e\n\t\t};\n\n\t\tif (typeof e.originalEvent.touches !== 'undefined') {\n\t\t\tobj.touches = [];\n\t\t\t$.each(e.originalEvent.touches, function (i, ob) {\n\t\t\t\tobj.touches[i] = {};\n\t\t\t\tobj.touches[i].clientX = 0 + ob.clientX;\n\t\t\t\tobj.touches[i].clientY = 0 + ob.clientY;\n\t\t\t});\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\n\t/**\r\n  * Save image meta\r\n  *\r\n  */\n\tsaveImageMeta: function saveImageMeta() {\n\t\tif (!this.$area.hasClass('show')) return false;\n\n\t\tthis.imageMeta.position = this.$area.position().left + 'px ' + this.$area.position().top + 'px';\n\t\tthis.imageMeta.size = this.$area.width() + 'px auto';\n\t},\n\n\n\t/**\r\n  * Init drag event\r\n  *\r\n  */\n\tinitDragEvent: function initDragEvent() {\n\t\tthis.$figure.on('mousedown.area', '.area', this.startMoving);\n\t\tthis.$figure.on('mousedown.resize', '.resize', this.startResizing);\n\t},\n\n\n\t/**\r\n  * Start moving\r\n  *\r\n  * @param {event} e\r\n  */\n\tstartMoving: function startMoving(e) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\t// save drag meta\n\t\tthis.dragMeta = this.saveDragMeta(e, this.$area);\n\n\t\t// set $img\n\t\tthis.$img = this.$figure.find('img');\n\n\t\t// disable animation\n\t\tthis.$area.removeClass('animate');\n\t\tthis.$img.removeClass('animate');\n\n\t\t// init event\n\t\t$(document).on('mousemove.area', this.moving);\n\t\t$(document).on('mouseup.area', this.endMoving);\n\t},\n\n\n\t/**\r\n  * Moving\r\n  *\r\n  * @param {event} e\r\n  */\n\tmoving: function moving(e) {\n\t\tvar mouse = {};\n\t\tvar position = {};\n\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\t// set mouse position\n\t\tmouse.x = (e.clientX || e.pageX) + $(window).scrollLeft();\n\t\tmouse.y = (e.clientY || e.pageY) + $(window).scrollTop();\n\n\t\t// set position x,y\n\t\tposition.left = mouse.x - (this.dragMeta.mouseX - this.dragMeta.containerLeft);\n\t\tposition.top = mouse.y - (this.dragMeta.mouseY - this.dragMeta.containerTop);\n\n\t\t// set position area\n\t\tthis.$area.offset({\n\t\t\t'left': position.left,\n\t\t\t'top': position.top\n\t\t});\n\n\t\t// set position image\n\t\tthis.$img.offset({\n\t\t\t'left': position.left,\n\t\t\t'top': position.top\n\t\t});\n\t},\n\n\n\t/**\r\n  * End moving\r\n  *\r\n  * @param {event} e\r\n  */\n\tendMoving: function endMoving(e) {\n\t\te.preventDefault();\n\n\t\tthis.dragMeta = {};\n\t\tthis.$img = null;\n\n\t\t$(document).off('mousemove.area').off('mouseup.area');\n\n\t\tthis.saveImageMeta();\n\t},\n\n\n\t/**\r\n  * Start resize\r\n  *\r\n  * @param {event} e\r\n  */\n\tstartResizing: function startResizing(e) {\n\t\te.stopPropagation();\n\n\t\t// save drag meta\n\t\tthis.dragMeta = this.saveDragMeta(e, this.$area);\n\n\t\t// set $img\n\t\tthis.$img = this.$figure.find('img');\n\n\t\t// disable animation\n\t\tthis.$area.removeClass('animate');\n\t\tthis.$img.removeClass('animate');\n\n\t\t// init event\n\t\t$(document).on('mousemove.resize', this.resizing);\n\t\t$(document).on('mouseup.resize', this.endResizing);\n\t},\n\n\n\t/**\r\n  * Start resize\r\n  *\r\n  * @param {event} e\r\n  */\n\tresizing: function resizing(e) {\n\t\tvar mouse = {};\n\t\tvar width = 0;\n\n\t\t// set mouse position\n\t\tmouse.x = (e.clientX || e.pageX || e.originalEvent.touches[0].clientX) + $(window).scrollLeft();\n\t\tmouse.y = (e.clientY || e.pageY || e.originalEvent.touches[0].clientY) + $(window).scrollTop();\n\n\t\twidth = mouse.x - this.dragMeta.containerLeft;\n\t\t//height = mouse.y  - this.dragMeta.containerTop; // free resize\n\n\t\t// set size\n\t\tif (width > 30 && width < 1600) {\n\t\t\tthis.$img.width(width);\n\t\t\tthis.$area.width(this.$img.width()).height(this.$img.height());\n\t\t}\n\t},\n\n\n\t/**\r\n  * End resize\r\n  *\r\n  * @param {event} e\r\n  */\n\tendResizing: function endResizing(e) {\n\t\te.preventDefault();\n\n\t\tthis.dragMeta = {};\n\t\tthis.$img = null;\n\n\t\t$(document).off('mousemove.resize').off('mouseup.resize');\n\n\t\tthis.saveImageMeta();\n\t},\n\n\n\t/**\r\n  * End resize\r\n  *\r\n  */\n\tgotoCenter: function gotoCenter() {\n\t\tvar position = {\n\t\t\tleft: this.$figure.width() * 0.5 - this.$area.width() * 0.5 + 'px',\n\t\t\ttop: this.$figure.height() * 0.5 - this.$area.height() * 0.5 + 'px'\n\t\t};\n\n\t\t// set position area\n\t\tthis.$area.addClass('animate').css({\n\t\t\t'left': position.left,\n\t\t\t'top': position.top\n\t\t});\n\n\t\t// set position image\n\t\tif (this.$figure.find('img').length) {\n\t\t\tthis.$figure.find('img').addClass('animate').css({\n\t\t\t\t'left': position.left,\n\t\t\t\t'top': position.top\n\t\t\t});\n\t\t}\n\n\t\t// TODO : 애니메이션 타이밍 때문에 위치 저장이 제대로 안됨. 애니메이션을 넣으려면 저장 타이밍을 고쳐야할듯...\n\n\t\tthis.saveImageMeta();\n\t},\n\n\n\t/**\r\n  * Clear\r\n  *\r\n  */\n\tclear: function clear() {\n\t\tthis.$area.removeAttr('style');\n\t\tthis.imageMeta = {};\n\t},\n\n\n\t/**\r\n  * render\r\n  */\n\trender: function render() {\n\t\tvar styleObject = null;\n\t\tvar showArea = false;\n\t\tvar img = null;\n\n\t\tif (this.props.options) {\n\t\t\tshowArea = this.props.options.size !== 'cover';\n\t\t\tif (showArea) {\n\t\t\t\tstyleObject = {\n\t\t\t\t\t'left': this.props.options.position.split(' ')[0],\n\t\t\t\t\t'top': this.props.options.position.split(' ')[1],\n\t\t\t\t\t'width': this.props.options.size.split(' ')[0]\n\t\t\t\t};\n\t\t\t\timg = React.createElement(\n\t\t\t\t\t'span',\n\t\t\t\t\t{ className: 'img-wrap' },\n\t\t\t\t\tReact.createElement('img', { src: this.props.options.url, style: styleObject, alt: '' })\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tstyleObject = {\n\t\t\t\t\t'backgroundImage': 'url(' + this.props.options.url + ')',\n\t\t\t\t\t'backgroundSize': this.props.options.size,\n\t\t\t\t\t'backgroundPosition': this.props.options.position\n\t\t\t\t};\n\t\t\t\timg = React.createElement('div', { className: 'img-bg', style: styleObject });\n\t\t\t}\n\t\t}\n\n\t\treturn React.createElement(\n\t\t\t'div',\n\t\t\t{ ref: 'figure', className: 'figure' },\n\t\t\timg,\n\t\t\tReact.createElement(\n\t\t\t\t'div',\n\t\t\t\t{\n\t\t\t\t\tref: 'area',\n\t\t\t\t\tclassName: 'area' + (showArea ? ' show' : '') },\n\t\t\t\tReact.createElement(\n\t\t\t\t\t'button',\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'button',\n\t\t\t\t\t\tclassName: 'resize' },\n\t\t\t\t\t'resize'\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t}\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/jsx/cropper/Item.jsx\n ** module id = 15\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/jsx/cropper/Item.jsx?");

/***/ }
/******/ ]);